// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String  @unique
  hash      String
  firstName String?
  lastName  String?

  HolidayPerUser  HolidayPerUser[]
  HolidayApproval HolidayApproval[]

  @@map("users")
}

model Holiday {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  start DateTime
  end   DateTime

  userId           String
  HolidayPerUser   HolidayPerUser?   @relation(fields: [holidayPerUserId], references: [id], onDelete: Cascade)
  holidayPerUserId Int?
  HolidayApproval  HolidayApproval[]

  @@map("holidays")
}

model HolidayPerUser {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
  year      Int
  remaining Int

  userId            Int
  requestedHolidays Holiday[]
}

model HolidayApproval {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  holidayId  Int
  holiday    Holiday @relation(fields: [holidayId], references: [id], onDelete: Cascade)
  userId     Int
  approvedBy User    @relation(fields: [userId], references: [id])
}
